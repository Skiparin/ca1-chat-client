/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.io.IOException;
import java.util.Observable;
import java.util.Observer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 *
 * @author philliphbrink
 */
public class ClientGui extends javax.swing.JFrame implements Observer {

    private final EchoClient client;
    private final ExecutorService clientHandlers = Executors.newCachedThreadPool();

    /**
     * Creates new form ClientGui
     *
     * @param client will set the echo client
     */
    public ClientGui(EchoClient client) {
        initComponents();
        LoginWindow.setVisible(true);
        ChatWindow.setVisible(false);
        this.client = client;
        list1.setMultipleMode(true);

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (!client.isStopped()) {
                    client.send("MSG:: logged out");
                    client.send("LOGOUT");
                }
                System.exit(0);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChatWindow = new javax.swing.JPanel();
        SendButton = new javax.swing.JButton();
        Quit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReciveMSG = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        Sendmsg = new javax.swing.JTextArea();
        list1 = new java.awt.List();
        LoginWindow = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        InformationForUser = new javax.swing.JTextArea();
        IPField = new javax.swing.JTextField();
        PortField = new javax.swing.JTextField();
        UsernameField = new javax.swing.JTextField();
        LoginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SendButton.setText("Send");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });
        SendButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SendButtonKeyPressed(evt);
            }
        });

        Quit.setText("Logout");
        Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitActionPerformed(evt);
            }
        });

        ReciveMSG.setEditable(false);
        ReciveMSG.setColumns(20);
        ReciveMSG.setRows(5);
        jScrollPane1.setViewportView(ReciveMSG);

        Sendmsg.setColumns(20);
        Sendmsg.setRows(5);
        jScrollPane3.setViewportView(Sendmsg);

        list1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ChatWindowLayout = new javax.swing.GroupLayout(ChatWindow);
        ChatWindow.setLayout(ChatWindowLayout);
        ChatWindowLayout.setHorizontalGroup(
            ChatWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChatWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChatWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(ChatWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChatWindowLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChatWindowLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Quit, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ChatWindowLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        ChatWindowLayout.setVerticalGroup(
            ChatWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChatWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChatWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChatWindowLayout.createSequentialGroup()
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Quit, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ChatWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(SendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        InformationForUser.setEditable(false);
        InformationForUser.setColumns(20);
        InformationForUser.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        InformationForUser.setRows(5);
        InformationForUser.setText("Welcome to our Chat Client\nPlease fill out the following\nIP - Port - Username");
        InformationForUser.setToolTipText("<html style=\"text-align: center;\"></html>");
        InformationForUser.setAutoscrolls(false);
        jScrollPane4.setViewportView(InformationForUser);

        IPField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPFieldActionPerformed(evt);
            }
        });

        PortField.setToolTipText("Please enter port");
        PortField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PortFieldActionPerformed(evt);
            }
        });

        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Please Enter Username");

        jLabel2.setText("IP Address");

        jLabel3.setText("Port Number");

        javax.swing.GroupLayout LoginWindowLayout = new javax.swing.GroupLayout(LoginWindow);
        LoginWindow.setLayout(LoginWindowLayout);
        LoginWindowLayout.setHorizontalGroup(
            LoginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginWindowLayout.createSequentialGroup()
                .addGroup(LoginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(LoginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LoginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                            .addComponent(UsernameField)
                            .addGroup(LoginWindowLayout.createSequentialGroup()
                                .addGroup(LoginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IPField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(LoginWindowLayout.createSequentialGroup()
                                        .addGap(58, 58, 58)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(LoginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PortField, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginWindowLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(60, 60, 60))))))
                    .addGroup(LoginWindowLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        LoginWindowLayout.setVerticalGroup(
            LoginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LoginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LoginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IPField, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(PortField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ChatWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(LoginWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ChatWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(LoginWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        String msg = Sendmsg.getText();
        if (!checkOnlineUser(list1.getSelectedItems())) {
            clientHandlers.submit(() -> client.send("MSG:" + selectedUsers(list1.getSelectedItems()) + msg));
            ReciveMSG.append("\n You: " + msg);
            Sendmsg.setText("");
        } else if (checkOnlineUser(list1.getSelectedItems())) {
            clientHandlers.submit(() -> client.send("MSG::" + msg));
            ReciveMSG.append("\n You: " + msg);
            Sendmsg.setText("");
        }
    }//GEN-LAST:event_SendButtonActionPerformed

    private void QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitActionPerformed
        client.send("MSG:: logged out");
        client.send("LOGOUT:");
        System.exit(0);
    }//GEN-LAST:event_QuitActionPerformed

    private void PortFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PortFieldActionPerformed

    }//GEN-LAST:event_PortFieldActionPerformed

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        try {
            client.connect(IPField.getText(), Integer.parseInt(PortField.getText()));
            ReciveMSG.setText("You are connected");
            client.send("LOGIN:" + UsernameField.getText());
            client.addObserver(this);
            clientHandlers.submit(() -> client.receive());
            LoginWindow.setVisible(false);
            ChatWindow.setVisible(true);

        } catch (IOException e) {
            System.out.println(e);
            ReciveMSG.setText("No connection");

        }
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void IPFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPFieldActionPerformed

    }//GEN-LAST:event_IPFieldActionPerformed

    private void SendButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SendButtonKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SendButtonKeyPressed

    private void list1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_list1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ClientGui(new EchoClient()).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChatWindow;
    private javax.swing.JTextField IPField;
    private javax.swing.JTextArea InformationForUser;
    private javax.swing.JButton LoginButton;
    private javax.swing.JPanel LoginWindow;
    private javax.swing.JTextField PortField;
    private javax.swing.JButton Quit;
    private javax.swing.JTextArea ReciveMSG;
    private javax.swing.JButton SendButton;
    private javax.swing.JTextArea Sendmsg;
    private javax.swing.JTextField UsernameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        String data = (String) arg;
        String[] args = data.split(":");
        switch (args[0]) {
            case "CLIENTLIST":
                String[] users = args[1].split(",");
                list1.clear();
                list1.add("All");
                for (String user : users) {
                    list1.add(user);

                    //OnlineUsers.add(user, this);
                }
                break;
            case "MSGRES":
                ReciveMSG.append("\n" + args[1] + " sent: " + args[2]);
                break;
        }
    }

    private boolean checkOnlineUser(String[] args) {
        for (String arg : args) {
            if (arg.equals("All")) {
                return true;
            }
        }
        return false;
    }

    private String selectedUsers(String[] args) {
        String users = "";
        for (String arg : args) {
            users = users.concat(arg + ",");
        }
        users = users.substring(0, (users.length() - 1));
        return users.concat(":");
    }
}
